/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author T10
 */
public class UI extends javax.swing.JFrame {
    ArrayList<Pregunta> preguntas;
    ArrayList<Pregunta> opciones;
    ArrayList<JRadioButton> radios;
    int indicePregunta;
    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        preguntas = obtenerCuestionario();
        etiquetaPreguntaTitulo.setText(preguntas.get(0).getTitulo());
        
        
        //Inicializamos el array de radios
        radios = new ArrayList<>();
        radios.add(radioOp1);
        radios.add(radioOp2);
        radios.add(radioOp3);
        radios.add(radioOp4);
        //Buton deshablilitado
        Siguiente.setEnabled(false);
        
        
        //LOgica de aplicacion, llenado de rbuttons con opciones de pregunta
        for (int i = 0; i < radios.size(); i++) {
            radios.get(i).setText(preguntas.get(indicePregunta).getOpciones().get(i).getTitulo());
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        etiquetaPreguntaTitulo = new javax.swing.JLabel();
        checarRespuesta = new javax.swing.JButton();
        Siguiente = new javax.swing.JButton();
        radioOp1 = new javax.swing.JRadioButton();
        radioOp2 = new javax.swing.JRadioButton();
        radioOp3 = new javax.swing.JRadioButton();
        radioOp4 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TEST");

        jPanel1.setBackground(new java.awt.Color(0, 76, 132));

        jPanel2.setBackground(new java.awt.Color(0, 42, 64));

        etiquetaPreguntaTitulo.setFont(new java.awt.Font("Source Code Pro Semibold", 1, 18)); // NOI18N
        etiquetaPreguntaTitulo.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaPreguntaTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiquetaPreguntaTitulo.setText("Pregunta");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaPreguntaTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(etiquetaPreguntaTitulo)
                .addGap(20, 20, 20))
        );

        checarRespuesta.setText("Checar respuesta");
        checarRespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checarRespuestaActionPerformed(evt);
            }
        });

        Siguiente.setText("Siguiente");
        Siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiguienteActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioOp1);
        radioOp1.setText("jRadioButton1");

        buttonGroup1.add(radioOp2);
        radioOp2.setText("jRadioButton2");

        buttonGroup1.add(radioOp3);
        radioOp3.setText("jRadioButton3");

        buttonGroup1.add(radioOp4);
        radioOp4.setText("jRadioButton4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radioOp1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checarRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                        .addComponent(Siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioOp4)
                            .addComponent(radioOp3)
                            .addComponent(radioOp2))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(radioOp1)
                .addGap(18, 18, 18)
                .addComponent(radioOp2)
                .addGap(18, 18, 18)
                .addComponent(radioOp3)
                .addGap(18, 18, 18)
                .addComponent(radioOp4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checarRespuesta)
                    .addComponent(Siguiente))
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checarRespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checarRespuestaActionPerformed
        // TODO add your handling code here:
        Siguiente.setEnabled(true);
        checarRespuesta.setEnabled(false);
        int indiceSeleccionado=0;
        for (int i = 0; i < radios.size(); i++) {
            if (radios.get(i).isSelected()) {
                indiceSeleccionado=i;
                break;
            }
        }
        System.out.println("Indice seleccionado: "+indiceSeleccionado);
        JOptionPane.showMessageDialog(this, "Tu respuesta es: "+checar(preguntas.get(indicePregunta), indiceSeleccionado));
        indicePregunta++;
    }//GEN-LAST:event_checarRespuestaActionPerformed

    private void SiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiguienteActionPerformed
        // TODO add your handling code here:
        Siguiente.setEnabled(false);
        preguntas = obtenerCuestionario();
        etiquetaPreguntaTitulo.setText(preguntas.get(indicePregunta).getTitulo());
        
        
        //Inicializamos el array de radios
        radios = new ArrayList<>();
        radios.add(radioOp1);
        radios.add(radioOp2);
        radios.add(radioOp3);
        radios.add(radioOp4);
        //Buton deshablilitado
        Siguiente.setEnabled(false);
        
        
        //LOgica de aplicacion, llenado de rbuttons con opciones de pregunta
        for (int i = 0; i < radios.size(); i++) {
            radios.get(i).setText(preguntas.get(indicePregunta).getOpciones().get(i).getTitulo());
            
        }
        checarRespuesta.setEnabled(true);
    }//GEN-LAST:event_SiguienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
                
            }
        });
    }
    
    public ArrayList<Pregunta> obtenerCuestionario(){
    Opcion op1 = new Opcion("Ecaterror", false);
        Opcion op2 = new Opcion("Mizcalco", false);
        Opcion op3 = new Opcion("Kiev", true);
        Opcion op4 = new Opcion("Chalco", false);
        ArrayList<Opcion> opciones = new ArrayList<>();
        opciones.add(op1);
        opciones.add(op2);
        opciones.add(op3);
        opciones.add(op4);
        Pregunta p1 = new Pregunta("¿Cual es la capital de Ucrania?", opciones);
        
        Opcion op11 = new Opcion("Mizcalco", false);
        Opcion op12 = new Opcion("NezaYork", false);
        Opcion op13 = new Opcion("Minezota", false);
        Opcion op14 = new Opcion("CDMX", true);
        ArrayList<Opcion> opciones1 = new ArrayList<>();
        opciones1.add(op11);
        opciones1.add(op12);
        opciones1.add(op13);
        opciones1.add(op14);
        Pregunta p11 = new Pregunta("¿Cual es la capital de Mexico?", opciones1);
        
        Opcion op21 = new Opcion("Anaya", false);
        Opcion op22 = new Opcion("Felipe Calderon", false);
        Opcion op23 = new Opcion("El peje", true);
        Opcion op24 = new Opcion("Margarita", false);
        ArrayList<Opcion> opciones2 = new ArrayList<>();
        opciones2.add(op21);
        opciones2.add(op22);
        opciones2.add(op23);
        opciones2.add(op24);
        Pregunta p21 = new Pregunta("¿Quien es el presidente electo de Mexico?", opciones2);
        
        Opcion op31 = new Opcion("Tierra", false);
        Opcion op32 = new Opcion("Venus", false);
        Opcion op33 = new Opcion("Jupiter", false);
        Opcion op34 = new Opcion("Marte", true);
        ArrayList<Opcion> opciones3 = new ArrayList<>();
        opciones3.add(op31);
        opciones3.add(op32);
        opciones3.add(op33);
        opciones3.add(op34);
        Pregunta p3 = new Pregunta("¿Cual es el 4 planeta del Sistema Solar?", opciones3);
        
        Opcion op41 = new Opcion("10", false);
        Opcion op42 = new Opcion("5", true);
        Opcion op43 = new Opcion("3", false);
        Opcion op44 = new Opcion("7", false);
        ArrayList<Opcion> opciones4 = new ArrayList<>();
        opciones4.add(op41);
        opciones4.add(op42);
        opciones4.add(op43);
        opciones4.add(op44);
        Pregunta p4 = new Pregunta("¿Cuantos Oceanos hay en la Tierra?", opciones4);
        
        Opcion op51 = new Opcion("2", true);
        Opcion op52 = new Opcion("3", false);
        Opcion op53 = new Opcion("7", false);
        Opcion op54 = new Opcion("1", false);
        ArrayList<Opcion> opciones5 = new ArrayList<>();
        opciones5.add(op51);
        opciones5.add(op52);
        opciones5.add(op53);
        opciones5.add(op54);
        Pregunta p5 = new Pregunta("¿En cuantos Oceanos tiene costa Mexico?", opciones5);
        
        Opcion op61 = new Opcion("Octubre", false);
        Opcion op62 = new Opcion("Diciembre", false);
        Opcion op63 = new Opcion("Noviembre", true);
        Opcion op64 = new Opcion("Julio", false);
        ArrayList<Opcion> opciones6 = new ArrayList<>();
        opciones6.add(op61);
        opciones6.add(op62);
        opciones6.add(op63);
        opciones6.add(op64);
        Pregunta p6 = new Pregunta("¿En que mes se celebra el dia de muertos?", opciones6);
        
        Opcion op71 = new Opcion("1810", true);
        Opcion op72 = new Opcion("1910", false);
        Opcion op73 = new Opcion("1821", false);
        Opcion op74 = new Opcion("1815", false);
        ArrayList<Opcion> opciones7 = new ArrayList<>();
        opciones7.add(op71);
        opciones7.add(op72);
        opciones7.add(op73);
        opciones7.add(op74);
        Pregunta p7 = new Pregunta("¿En que año empezo la independencia de Mexico?", opciones7);
        
        Opcion op81 = new Opcion("Washington DC", true);
        Opcion op82 = new Opcion("Nueva York", false);
        Opcion op83 = new Opcion("Minezota", false);
        Opcion op84 = new Opcion("CDMX", false);
        ArrayList<Opcion> opciones8 = new ArrayList<>();
        opciones8.add(op81);
        opciones8.add(op82);
        opciones8.add(op83);
        opciones8.add(op84);
        Pregunta p8 = new Pregunta("¿Cual es la capital de Estados Unidos?", opciones8);
        
        Opcion op91 = new Opcion("7", false);
        Opcion op92 = new Opcion("4", false);
        Opcion op93 = new Opcion("5", true);
        Opcion op94 = new Opcion("8", false);
        ArrayList<Opcion> opciones9 = new ArrayList<>();
        opciones9.add(op91);
        opciones9.add(op92);
        opciones9.add(op93);
        opciones9.add(op94);
        Pregunta p9 = new Pregunta("¿Cuantos continentes hay?", opciones9);

        ArrayList<Pregunta> preguntas = new ArrayList<>();
        preguntas.add(p1);
        preguntas.add(p11);
        preguntas.add(p21);
        preguntas.add(p3);
        preguntas.add(p4);
        preguntas.add(p5);
        preguntas.add(p6);
        preguntas.add(p7);
        preguntas.add(p8);
        preguntas.add(p9);
        return preguntas;
        
        
    }
    boolean checar(Pregunta p, int indiceSeleccionado){
        boolean correcta=false;
        if (p.getOpciones().get(indiceSeleccionado).isCorreta()) {
            correcta=true;
        }
        
        return correcta;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Siguiente;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton checarRespuesta;
    private javax.swing.JLabel etiquetaPreguntaTitulo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton radioOp1;
    private javax.swing.JRadioButton radioOp2;
    private javax.swing.JRadioButton radioOp3;
    private javax.swing.JRadioButton radioOp4;
    // End of variables declaration//GEN-END:variables
}
